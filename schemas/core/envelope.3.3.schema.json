{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://mova.dev/schemas/core/envelope.3.3.schema.json",
  "title": "MOVA Envelope",
  "description": "Канонічна схема для 'конверта' або 'плану' MOVA.",
  "type": "object",
  "properties": {
    "mova_version": {
      "description": "Версія формату плану",
      "type": "string",
      "pattern": "^3\\.3\\.\\d+$"
    },
    "payload_media_type": {
      "type": "string",
      "description": "IANA media type for the envelope payload",
      "enum": [
        "application/json",
        "application/ld+json"
      ],
      "default": "application/json"
    },
    "payload": {
      "type": [
        "object",
        "array",
        "string",
        "number",
        "boolean",
        "null"
      ]
    },
    "description": {
      "type": "string"
    },
    "parameters": {
      "description": "Схема для вхідних параметрів плану (використовується для валідації вхідних даних).",
      "type": "object"
    },
    "actions": {
      "description": "Список дій, які потрібно виконати",
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/$defs/action"
      }
    }
  },
  "required": [
    "mova_version",
    "actions"
  ],
  "$defs": {
    "action": {
      "description": "Будь-яка валідна дія MOVA",
      "type": "object",
      "discriminator": {
        "propertyName": "type"
      },
      "properties": {
        "on_error": {
          "$ref": "#/properties/actions"
        },
        "for_each": {
          "type": "string"
        },
        "loop_variable": {
          "type": "string",
          "default": "item"
        },
        "if": {
          "type": "string"
        },
        "on_success": {
          "$ref": "#/properties/actions"
        }
      },
      "oneOf": [
        {
          "$ref": "https://mova.dev/schemas/actions/log.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/set.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/http.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/return.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/invoke.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/switch.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/parallel.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/try.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/delay.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/emit_event.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/read_file.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/assert.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/base64.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/call.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/file_read.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/file_write.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/if.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/json_patch.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/parse_json.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/print.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/regex_extract.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/repeat.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/sleep.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/tool_call.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/transform.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/vnl.schema.json"
        },
        {
          "$ref": "https://mova.dev/schemas/actions/secrets.schema.json"
        }
      ]
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "payload_media_type": {
            "const": "application/ld+json"
          }
        },
        "required": [
          "payload_media_type"
        ]
      },
      "then": {
        "properties": {
          "payload": {
            "type": "object",
            "required": [
              "@context"
            ],
            "properties": {
              "@context": {}
            }
          }
        }
      }
    }
  ]
}

